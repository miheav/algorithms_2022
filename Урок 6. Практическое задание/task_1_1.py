"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для первого скрипта
"""
# Урок 2 задание 4

from memory_profiler import profile

@profile
def wrap(n_count):
    def recur(i, numb, n_count, common_sum):
        """Рекурсия"""
        if i == n_count:
            print(f"Количество элементов - {n_count}, их сумма - {common_sum}")
        elif i < n_count:
            return recur(i + 1, numb / 2 * -1, n_count, common_sum+numb)
    return recur(0, 1, n_count, 0)


try:
    N_COUNT = int(input("Введите количество элементов: "))
    wrap(N_COUNT)
except ValueError:
    print("Вы вместо числа ввели строку. Исправьтесь")
    
    
    
@profile
def recur_new(n_count):
    element = 1
    sum = 0
    for i in range(n_count):
        sum += element
        element = element / 2 * -1
    print(f"Количество элементов - {n_count}, их сумма - {sum}")
    
    
try:
    N_COUNT = int(input("Введите количество элементов: "))
    recur_new(N_COUNT)
except ValueError:
    print("Вы вместо числа ввели строку. Исправьтесь")
    
    
# Заменив рекурсию на цикл удалось незначительно уменьшить потребление памяти